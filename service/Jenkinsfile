/*
TO-DO LISTS
 1. Give example for VM with custom port using sshpass
 2. Add info in each stage
 3. Find flag to remove Docker image either it exists or not
 4. How if branch contains numbers?
*/

pipeline {
    agent any
    tools {
        nodejs('nodejs-16')
    }
    environment {
        BRANCH = "${params.BRANCH}"
        VM_IP = "${BRANCH == 'dev' ? '123.163.194.154' : BRANCH == 'sit' ?  '58.236.169.3' : BRANCH == 'uat' ? '154.226.218.75' : BRANCH == 'prod' && '196.172.27.77'}"
        VM_USER = "${BRANCH == 'dev' ? 'dimas' : BRANCH == 'sit' ? 'yudha' : BRANCH == 'uat' ? 'pratama' : BRANCH == 'prod' && 'dimasyudha'}"
        VM_PASS = credentials('vm-pass')
        BOT = credentials('bot-token')
        GROUP = credentials('group-id')
    }
    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'dev', name: 'BRANCH', type: 'PT_BRANCH'
    }
    stages {
        stage('Initialize Directory') {
            steps {
                sh """
                    sshpass -p '${VM_PASS}' ssh ${VM_USER}@${VM_IP} mkdir -p /home/dimasyudha/mern
                    sshpass -p '${VM_PASS}' ssh ${VM_USER}@${VM_IP} mkdir -p /home/dimasyudha/mern/service
                """
            }
        }
        stage('NPM Install') {
            steps {
                sh 'npm i'
            }
        }
        stage('Set Environment') {
            steps {
                sh """
                    cp -rf .env.${BRANCH} .env
                    sshpass -p '${VM_PASS}' scp .env ${VM_USER}@${VM_IP}:/home/dimasyudha/mern/service
                """
            }
        }
        stage('Docker Build') {
            steps {
                sh 'docker build -t dimasyudha.com/mern-service .'
            }
        }
        stage('Push to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh """
                        docker login -u ${USER} -p ${PASS} dimasyudha.com
                        docker push dimasyudha.com/mern-service
                    """
                }
            }
        }
        stage('Docker Compose') {
            steps {
                sh """
                    sshpass -p '${VM_PASS}' scp service/docker-compose.yml ${VM_USER}@${VM_IP}:/home/dimasyudha/mern/service
                    sshpass -p '${VM_PASS}' ssh ${VM_USER}@${VM_IP} docker-compose -f /home/dimasyudha/mern/service/docker-compose.yml down
                    sshpass -p '${VM_PASS}' ssh ${VM_USER}@${VM_IP} docker-compose -f /home/dimasyudha/mern/service/docker-compose.yml pull
                    sshpass -p '${VM_PASS}' ssh ${VM_USER}@${VM_IP} docker-compose -f /home/dimasyudha/mern/service/docker-compose.yml up -d
                """
            }
        }
        stage('Save Variable Value') {
            steps {
                script {
                    TOKEN = "${BOT}"
                    ID = "${GROUP}"
                }
            }
        }
    }
    post {
        always {
            sh '''
                docker image rm dimasyudha.com/mern-service
                rm -rf ../mern-service
            '''
        }
        success {
            sh "curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${ID} -d 'parse_mode=HTML' -d text='Hello Success!'"
        }
        failure {
            sh "curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${ID} -d 'parse_mode=HTML' -d text='Hello Failure!'"
        }
    }
}